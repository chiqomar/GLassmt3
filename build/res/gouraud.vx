#version 120
#include "light_func.shade"

uniform vec3 emission;
uniform vec3 ambient;
uniform vec3 diffuse;
uniform vec3 specular;
uniform float shininess;
varying vec4 color;

void main()
{
  vec3 eye_space_normal = gl_NormalMatrix * gl_Normal;
  vec4 vertex = gl_ModelViewMatrix * gl_Vertex;
  vec3 eye_space_vertex = vertex.xyz;

  vec3 xer = vec3(1.0,0,0);
  vec3 yer = vec3(0, 1.0, 0);
  vec3 zer = vec3(0,0,1.0);

  float xee = abs(dot(xer,gl_Normal));
  float yee = abs(dot(yer, gl_Normal));
  float zee = abs(dot(zer, gl_Normal));


  color = vec4(shadeit(emission,ambient,diffuse,specular,shininess,eye_space_vertex,eye_space_normal),1.0);
  //color = vec4(xee, yee, zee ,1.0) ;
    gl_Position = gl_ProjectionMatrix * vertex;
}
